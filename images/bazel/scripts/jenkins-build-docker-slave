#!/bin/bash
#
# Building tagging, and pushing Docker Jenkins slave.
#

ROOT="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"
. ${ROOT}/scripts/all-utilities || { echo "Cannot load Jenkins utilities"; exit 1; }

GH_BAZEL_BIN="${ROOT}/bazel-bin/tools/github_helper/github_helper"

BUILD=false
PUSH=false
FORCE=false
TOOLS_BUCKET=''

# Check if an image needs to be overwritten
function update_image() {
  local image="${1}"
  [[ ${FORCE} == true ]] && return 0
  ${GCLOUD} docker -- pull "${image}"
  local image_exists=${?}
  [[ ${image_exists} -eq 0 ]] && return 1
  return 0
}

while getopts :bi:fps:t:T: arg; do
  case ${arg} in
    b) BUILD=true;;
    i) IMAGE="${OPTARG}";;
    f) FORCE=true;;
    s) SLAVE="${OPTARG}";;
    t) TAG="${OPTARG}";;
    T) TOOLS_BUCKET="${OPTARG}";;
    *) error_exit "Unrecognized argument -${OPTARG}";;
  esac
done

[[ -n "${IMAGE}" ]] || error_exit "Specify required image argument via '-i'"

# Build
if [[ "${BUILD}" == true ]]; then
  if [[ ! -e "${GH_BAZEL_BIN}" ]]; then
    bazel build -c opt //tools/github_helper \
      || error_exit 'Could not build github helper'
  fi
  cp -f "${GH_BAZEL_BIN}" "${ROOT}/" \
    || error_exit 'Could not copy github_helper'

  DOCKER_FILE="${ROOT}/docker/slaves/${SLAVE}.Dockerfile"
  [[ -e "${DOCKER_FILE=}" ]] \
    || error_exit "File ${DOCKER_FILE} does not exist.
  Please provide valid slave argument via '-s'"
  update_image "${IMAGE}"
  if [[ ${?} -eq 0 ]]; then
    echo "Building docker image ${IMAGE}."
    retry -n 10 docker build --no-cache \
      --build-arg TOOLS_BUCKET="${TOOLS_BUCKET}" -t ${IMAGE} \
      -f "${DOCKER_FILE}" . || error_exit "Could not build ${SLAVE}"
    echo "Pushing Docker image: ${IMAGE}"
    retry -n 3 ${GCLOUD} docker -- push "${IMAGE}" \
      || error_exit "Failed to push tag ${IMAGE}."
  fi
fi

# Tag
if [[ -n "${TAG}" ]]; then
  echo "Tagging image ${IMAGE} to tag ${TAG}."
  retry -n 3 docker tag "${IMAGE}" ${TAG}

  echo "Pushing Docker image: ${TAG}"
  retry -n 3 ${GCLOUD} docker -- push "${TAG}" \
    || error_exit "Failed to push tag ${TAG}."
fi

